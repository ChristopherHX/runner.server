{
  "version": "pipelines-v1.0",

  "definitions": {

    "workflow-root": {
      "description": "Workflow file",
      "mapping": {
        "loose-key-type": "workflow-key",
        "loose-value-type": "workflow-value",
        "properties": {
          "parameters": "any"
        }
      }
    },

    "workflow-key": {
      "context": [
        "parameters",
        "variables"
      ],
      "string": {}
    },

    "workflow-value": {
      "context": [
        "parameters",
        "variables"
      ],
      "one-of": [
        "boolean", "mapping", "null", "number", "sequence", "string"
      ]
    },

    "workflow-value-no-expand": {
      "context": [
        "no-expand"
      ],
      "one-of": [
        "boolean", "mapping", "null", "number", "sequence", "string"
      ]
    },

    "single-layer-workflow-mapping": {
      "context": [
        "parameters",
        "variables"
      ],
      "mapping": {
        "loose-key-type": "workflow-key",
        "loose-value-type": "workflow-value-no-expand"
      }
    },

    "single-layer-workflow-sequence": {
      "context": [
        "parameters",
        "variables"
      ],
      "sequence": {
        "item-type": "workflow-value-no-expand"
      }
    },

    "pipeline-container": {
      "description": "Pipeline container as of https://learn.microsoft.com/en-us/azure/devops/release-notes/2022/pipelines/sprint-212-update",
      "mapping": {
        "properties": {
          "container": {
            "type": "referenceName",
            "first-property": true,
            "required": true
          },
          "image": {
            "type": "string",
            "required": true
          },
          "type": "string",
          "trigger": "container-trigger",
          "endpoint": "workflow-value",
          "env": "mapping",
          "mapDockerSocket": "pipeline-boolean",
          "options": "workflow-value",
          "ports": "workflow-value",
          "volumes": "workflow-value",
          "mountReadOnly": "any",
          "azureSubscription": "string",
          "resourceGroup": "string",
          "registry": "string",
          "repository": "string"
        },
        "loose-key-type": "workflow-key",
        "loose-value-type": "workflow-value"
      }
    },

    "includeExcludeStringFilters-object": {
      "mapping": {
        "properties": {
          "include": "sequenceOfNonEmptyString",
          "exclude": "sequenceOfNonEmptyString"
        }
      }
    },

    "includeExcludeStringFilters": {
      "one-of": [
        "sequenceOfNonEmptyString",
        "includeExcludeStringFilters-object"
      ]
    },

    "containerResourceTrigger-object": {
      "mapping": {
        "properties": {
          "enabled": {
            "type": "pipeline-boolean"
          },
          "tags": {
            "type": "includeExcludeStringFilters"
          }
        }
      }
    },

    "container-trigger": {
      "one-of": [
        "pipelineResourceTrigger-none",
        "pipelineResourceTrigger-true",
        "containerResourceTrigger-object"
      ]
    },

    "pipeline-containers": {
      "context": [
        "parameters",
        "variables"
      ],
      "sequence": {
        "item-type": "pipeline-container"
      }
    },

    "pipeline-boolean-true": {
      "string": {
        "ignore-case": true,
        "pattern": "^true$"
      }
    },
    "pipeline-boolean-y": {
      "string": {
        "ignore-case": true,
        "pattern": "^y$"
      }
    },
    "pipeline-boolean-yes": {
      "string": {
        "ignore-case": true,
        "pattern": "^yes$"
      }
    },
    "pipeline-boolean-on": {
      "string": {
        "ignore-case": true,
        "pattern": "^on$"
      }
    },
    "pipeline-boolean-false": {
      "string": {
        "ignore-case": true,
        "pattern": "^false$"
      }
    },
    "pipeline-boolean-n": {
      "string": {
        "ignore-case": true,
        "pattern": "^n$"
      }
    },
    "pipeline-boolean-no": {
      "string": {
        "ignore-case": true,
        "pattern": "^no$"
      }
    },
    "pipeline-boolean-off": {
      "string": {
        "ignore-case": true,
        "pattern": "^off$"
      }
    },

    "pipeline-boolean": {
      "one-of": [
        "pipeline-boolean-true",
        "pipeline-boolean-y",
        "pipeline-boolean-yes",
        "pipeline-boolean-on",
        "pipeline-boolean-false",
        "pipeline-boolean-n",
        "pipeline-boolean-no",
        "pipeline-boolean-off"
      ]
    },

    "pipeline-repository": {
      "description": "Pipeline repository as of https://learn.microsoft.com/en-us/azure/devops/release-notes/2022/pipelines/sprint-212-update",
      "mapping": {
        "properties": {
          "repository": {
            "type": "string",
            "required": true,
            "first-property": true
          },
          "name": "string",
          "type": "string",
          "endpoint": "string",
          "ref": "workflow-value",
          "trigger": "pipeline-trigger"
        },
        "loose-key-type": "workflow-key",
        "loose-value-type": "workflow-value"
      }
    },

    "pipeline-repositories": {
      "sequence": {
        "item-type": "pipeline-repository"
      }
    },

    "pipeline-builds": {
      "sequence": {
        "item-type": "pipeline-build"
      }
    },

    "pipeline-build": {
      "mapping": {
        "properties": {
          "build": {
            "description": "Alias or name of build artifact",
            "type": "referenceName",
            "first-property": true,
            "required": true
          },
          "type": {
            "description": "Name of the artifact type",
            "type": "nonEmptyString",
            "required": true
          },
          "connection": {
            "description": "Name of the connection. This connection will be used for all the communication related to this artifact.",
            "type": "nonEmptyString",
            "required": true
          },
          "source": {
            "description": "Name of the source definition/build/job",
            "type": "nonEmptyString",
            "required": true
          },
          "version": {
            "type": "string_allowExpressions"
          },
          "branch": {
            "type": "string_allowExpressions"
          },
          "trigger": {
            "description": "When the artifact mentioned in this build resource completes a build, its allowed to trigger this pipeline.",
            "type": "buildResourceTrigger"
          }
        }
      }
    },
    "buildResourceTrigger": {
      "allowed-values": [
        "none", "true"
      ]
    },

    "pipeline-pipelines": {
      "sequence": {
        "item-type": "pipeline-pipeline"
      }
    },

    "pipeline-pipeline": {
      "mapping": {
        "properties": {
          "pipeline": {
            "description": "ID of the pipeline resource",
            "type": "referenceName",
            "first-property": true,
            "required": true
          },
          "project": {
            "type": "nonEmptyString"
          },
          "source": {
            "type": "nonEmptyString"
          },
          "version": {
            "type": "string_allowExpressions"
          },
          "branch": {
            "type": "string_allowExpressions"
          },
          "tags": {
            "type": "sequenceOfNonEmptyString"
          },
          "trigger": {
            "type": "pipelineResourceTrigger"
          }
        }
      }
    },
    "pipelineResourceTrigger-none": {
      "string": {
        "constant": "none"
      }
    },
    "pipelineResourceTrigger-true": {
      "string": {
        "constant": "true"
      }
    },
    "triggerBranchFilter": {
      "one-of": [
        "branchFilterArray",
        "includeExcludeFilters"
      ]
    },
    "pipelineResourceTrigger-object": {
      "mapping": {
        "properties": {
          "enabled": {
            "type": "pipeline-boolean"
          },
          "branches": {
            "type": "triggerBranchFilter"
          },
          "stages": {
            "type": "sequenceOfNonEmptyString"
          },
          "tags": {
            "type": "sequenceOfNonEmptyString"
          }
        }
      }
    },
    "pipelineResourceTrigger": {
      "one-of": [
        "pipelineResourceTrigger-none",
        "pipelineResourceTrigger-true",
        "pipelineResourceTrigger-object"
      ]
    },

    "pipeline-webhooks": {
      "sequence": {
        "item-type": "pipeline-webhook"
      }
    },

    "pipeline-packages": {
      "sequence": {
        "item-type": "pipeline-package"
      }
    },

    "referenceName": {
      "string": {
        "pattern": "^[-_A-Za-z0-9]*$"
      }
    },

    "pipeline-webhook": {
      "mapping": {
        "properties": {
          "webhook": {
            "description": "Name of the webhook",
            "type": "referenceName",
            "first-property": true,
            "required": true
          },
          "connection": {
            "description": "Name of the connection. In case of offline webhook this will be the type of Incoming Webhook otherwise it will be the type of the webhook extension.",
            "type": "nonEmptyString",
            "required": true
          },
          "type": {
            "description": "Name of the webhook extension. leave this empty if its offline webhook.",
            "type": "nonEmptyString"
          },
          "filters": {
            "description": "List of trigger filters.",
            "type": "webhookFilters"
          }
        }
      }
    },
    "webhookFilters": {
      "sequence": {
        "item-type": "webhookFilter"
      }
    },
    "webhookFilter": {
      "mapping": {
        "properties": {
          "path": {
            "description": "json path to select data from event payload",
            "type": "nonEmptyString",
            "first-property": true,
            "required": true
          },
          "value": {
            "description": "Expected value for the filter to match",
            "type": "nonEmptyString",
            "required": true
          }
        }
      }
    },

    "string_allowExpressions": {
      "context": [
        "parameters",
        "variables"
      ],
      "string": {}
    },

    "pipeline-package": {
      "mapping": {
        "properties": {
          "package": {
            "description": "Alias of package artifact",
            "type": "referenceName",
            "first-property": true,
            "required": true
          },
          "type": {
            "description": "Type of the package. Ex - NuGet, NPM etc.",
            "type": "nonEmptyString",
            "required": true
          },
          "connection": {
            "description": "Name of the connection. This connection will be used for all the communication related to this artifact.",
            "type": "nonEmptyString",
            "required": true
          },
          "name": {
            "description": "Name of the package",
            "type": "nonEmptyString",
            "required": true
          },
          "version": {
            "type": "string_allowExpressions"
          },
          "tag": {
            "type": "string_allowExpressions"
          },
          "trigger": {
            "description": "Trigger a new pipeline run when a new version of this package is available.",
            "type": "packageResourceTrigger"
          }
        }
      }
    },
    "packageResourceTrigger": {
      "allowed-values": [
        "none", "true"
      ]
    },

    "pipeline-resources": {
      "description": "Pipeline resources",
      "mapping": {
        "properties": {
          "builds": "pipeline-builds",
          "containers": "pipeline-containers",
          "pipelines": "pipeline-pipelines",
          "repositories": "pipeline-repositories",
          "webhooks": "pipeline-webhooks",
          "packages": "pipeline-packages"
        }
      }
    },

    "pipeline-trigger": {
      "description": "Pipeline Trigger",
      "one-of": [
        "trigger-none",
        "branchFilterArray",
        "trigger-object"
      ]
    },

    "trigger-none": {
      "description": "None Trigger",
      "string": {
        "constant": "none"
      }
    },

    "branchFilterArray": {
      "sequence": {
        "item-type": "branchFilter"
      }
    },

    "branchFilter": {
      "description": "branch name or prefix filter",
      "string": {
        "pattern": "^[^\\/~\\^\\: \\[\\]\\\\]+(\\/[^\\/~\\^\\: \\[\\]\\\\]+)*$"
      }
    },

    "includeExcludeFilters": {
      "mapping": {
        "properties": {
          "include": "branchFilterArray",
          "exclude": "branchFilterArray"
        }
      }
    },

    "trigger-object": {
      "description": "Object Trigger",
      "mapping": {
        "properties": {
          "batch": "pipeline-boolean",
          "branches": "includeExcludeFilters",
          "paths": "includeExcludeFilters",
          "tags": "includeExcludeFilters"
        }
      }
    },

    "pipeline-pr": {
      "description": "Pipeline Pr",
      "one-of": [
        "trigger-none",
        "branchFilterArray",
        "pr-object"
      ]
    },

    "pr-object": {
      "description": "Object Pr",
      "mapping": {
        "properties": {
          "autoCancel": "pipeline-boolean",
          "branches": "includeExcludeFilters",
          "paths": "includeExcludeFilters",
          "drafts": "pipeline-boolean"
        }
      }
    },

    "pipeline-schedules": {
      "sequence": {
        "item-type": "schedule"
      }
    },

    "nonEmptyString": {
      "string": {
          "require-non-empty": true
      }
    },

    "sequenceOfNonEmptyString": {
      "sequence": {
        "item-type": "nonEmptyString"
      }
    },

    "schedule": {
      "mapping": {
        "properties": {
          "cron": {
            "type": "nonEmptyString",
            "first-property": true,
            "required": true
          },
          "displayName": "string",
          "branches": "includeExcludeFilters",
          "batch": "pipeline-boolean",
          "always": "pipeline-boolean"
        }
      }
    },

    "pipeline-root": {
      "description": "Pipeline file",
      "one-of": [
        "extends-pipeline-root",
        "stage-pipeline-root",
        "job-pipeline-root",
        "steps-pipeline-root"
      ]
    },

    "extends-pipeline-root": {
      "description": "Extends Pipeline file",
      "mapping": {
        "properties": {
          "trigger": "pipeline-trigger",
          "pr": "pipeline-pr",
          "schedules": "pipeline-schedules",
          "name": "string_allowExpressions",
          "appendCommitMessageToRunName": "pipeline-boolean",
          "resources": "pipeline-resources",
          "pool": "any",
          "lockBehavior": "any",
          "variables": "workflow-value",
          "parameters": "any",
          "extends": {
            "type": "workflow-value",
            "required": true
          }
        }
      }
    },

    "stage-pipeline-root": {
      "description": "Stage Pipeline file",
      "mapping": {
        "properties": {
          "trigger": "pipeline-trigger",
          "pr": "pipeline-pr",
          "schedules": "pipeline-schedules",
          "name": "string_allowExpressions",
          "appendCommitMessageToRunName": "pipeline-boolean",
          "resources": "pipeline-resources",
          "pool": "any",
          "lockBehavior": "any",
          "variables": "workflow-value",
          "parameters": "any",
          "stages": {
            "type": "workflow-value",
            "required": true
          }
        }
      }
    },

    "job-pipeline-root": {
      "description": "Job Pipeline file",
      "mapping": {
        "properties": {
          "trigger": "pipeline-trigger",
          "pr": "pipeline-pr",
          "schedules": "pipeline-schedules",
          "name": "string_allowExpressions",
          "appendCommitMessageToRunName": "pipeline-boolean",
          "resources": "pipeline-resources",
          "pool": "any",
          "lockBehavior": "any",
          "variables": "workflow-value",
          "parameters": "any",
          "jobs": {
            "type": "workflow-value",
            "required": true
          }
        }
      }
    },

    "steps-pipeline-root": {
      "description": "Steps Pipeline file",
      "mapping": {
        "properties": {
          "trigger": "pipeline-trigger",
          "pr": "pipeline-pr",
          "schedules": "pipeline-schedules",
          "name": "string_allowExpressions",
          "appendCommitMessageToRunName": "pipeline-boolean",
          "resources": "pipeline-resources",
          "pool": "any",
          "lockBehavior": "any",
          "variables": "workflow-value",
          "parameters": "any",
          "steps": {
            "type": "workflow-value",
            "required": true
          },
          "workspace": "any",
          "services": "any",
          "container": "any",
          "continueOnError": "any",
          "strategy": "any"
        }
      }
    },

    "stage-template-root": {
      "description": "Stage Template file",
      "mapping": {
        "properties": {
          "parameters": "any",
          "stages": {
            "type": "workflow-value",
            "required": true
          }
        }
      }
    },

    "job-template-root": {
      "description": "Job Template file",
      "mapping": {
        "properties": {
          "parameters": "any",
          "jobs": {
            "type": "workflow-value",
            "required": true
          }
        }
      }
    },

    "step-template-root": {
      "description": "Step Template file",
      "mapping": {
        "properties": {
          "parameters": "any",
          "steps": {
            "type": "workflow-value",
            "required": true
          }
        }
      }
    },

    "variable-template-root": {
      "description": "Variable Template file",
      "mapping": {
        "properties": {
          "parameters": "any",
          "variables": {
            "type": "workflow-value",
            "required": true
          }
        }
      }
    },

    "variable-result": {
      "context": [
        "variables",
        "dependencies",
        "stageDependencies",
        "pipeline",
        "resources",
        "Counter(0,2)"
      ],
      "string": {}
    },

    "job-if-result": {
      "context": [
        "variables",
        "dependencies",
        "stageDependencies",
        "Always(0,0)",
        "Canceled(0,0)",
        "Succeeded(0,MAX)",
        "SucceededOrFailed(0,MAX)",
        "Failed(0,MAX)"
      ],
      "boolean": {}
    },
    "stage-if-result": {
      "context": [
        "variables",
        "dependencies",
        "Always(0,0)",
        "Canceled(0,0)",
        "Succeeded(0,MAX)",
        "SucceededOrFailed(0,MAX)",
        "Failed(0,MAX)"
      ],
      "boolean": {}
    }
  }
}
