{"version":3,"sources":["components/MasterDetail/MasterDetail.module.scss","components/Header/Header.module.scss","components/ListItem/ListItem.module.scss","components/ListItemLink/ListItemLink.module.scss","utils/media-queries.model.ts","components/Header/Header.tsx","components/ListItem/ListItem.tsx","components/ListItemLink/ListItemLink.tsx","components/MasterDetail/MasterDetail.tsx","state/store.selectors.ts","containers/Detail/Detail.tsx","containers/Master/Master.tsx","App.tsx","serviceWorker.js","index.js","containers/Detail/Detail.module.scss"],"names":["module","exports","mediaQueries","Header","props","className","styles","header","query","matches","to","back","style","visibility","hideBackButton","data-test","title","defaultProps","listItemNoDataMessage","ListItem","component","inner","item","description","ListItemLink","exact","activeClassName","active","MasterDetail","path","useRouteMatch","master","MasterType","masterProps","detail","DetailType","detailProps","getJobById","jobs","id","actualId","parseInt","undefined","x","find","i","obj","RequestId","JobId","TimeLineId","DetailContainer","useState","setJobs","timeline","setTimeline","setTitle","useParams","owner","repo","useEffect","a","_id","Number","length","fetch","ghHostApiUrl","json","njobs","timelineId","newTimeline","shift","name","convert","Convert","newline","tl","log","text","content","toHtml","reduce","prev","c","line","location","source","EventSource","addEventListener","ev","console","data","e","JSON","parse","s","t","record","StepId","escapeXML","Value","close","main","width","map","Collapsible","openedClassName","triggerClassName","Collapsible__trigger","triggerOpenedClassName","contentOuterClassName","Collapsible__contentOuter","contentInnerClassName","Collapsible__contentInner","trigger","textAlign","whiteSpace","maxHeight","overflow","dangerouslySetInnerHTML","__html","MasterContainer","url","items","apiUrl","sort","b","job","Fragment","App","render","from","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.16e9db30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"MasterDetail_component__Uz_TT\",\"master\":\"MasterDetail_master__25jd3\",\"detail\":\"MasterDetail_detail__1_NEc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__Nww_e\",\"back\":\"Header_back__2pYLZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"ListItem_component__1tRbh\",\"inner\":\"ListItem_inner__3kPOv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"ListItemLink_component__5N6-o\",\"active\":\"ListItemLink_active__14SJk\"};","export const mediaQueries = {\n    xs: null,\n    sm: null,\n    md: '(max-width: 599px)',\n    lg: null,\n    xl: null\n};  ","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Media from 'react-media';\nimport { mediaQueries } from 'utils';\nimport styles from './Header.module.scss';\n\nexport interface HeaderProps {\n    title: string,\n    hideBackButton?: boolean\n}\n\nexport const headerEmptyTitle = 'No Title';\n\nexport const Header: React.FC<HeaderProps> = (props) => {\n\n    return (\n        <div className={styles.header}>\n\n            <Media query={mediaQueries.md}>\n                { matches => matches ? (\n                    <Link to=\"../../\" className={styles.back}\n                        style={{ visibility: props.hideBackButton ? 'hidden' : 'visible' }}>\n                        Back\n                    </Link>\n                ): (\n                    <div>&nbsp;</div>\n                )}\n            </Media>\n\n            <h1 data-test=\"HeaderTitle\">\n                { props.title || headerEmptyTitle } \n            </h1>\n\n        </div> \n    );\n}\n\nHeader.defaultProps = {\n    hideBackButton: false\n};\n\nexport default Header;","import React from 'react'; \nimport { Item } from 'state';\nimport styles from './ListItem.module.scss';\n\nexport interface ListItemProps {\n    item: Item\n};\n\nexport const listItemNoDataMessage = 'No Data';\n\nexport const ListItem: React.FC<ListItemProps> = (props) => {\n    \n    return (\n        <div className={styles.component}>\n\n            <div className={styles.inner}>\n\n                <h1 data-test=\"ListItemHeading\">\n                    { props.item.title ? props.item.title : listItemNoDataMessage  }\n                </h1> \n\n                <h2 data-test=\"ListItemSubHeading\">\n                    { props.item.description ?  props.item.description : listItemNoDataMessage }\n                </h2>\n\n            </div>\n\n        </div> \n    );\n};\n\nexport default ListItem;","import React from 'react'; \nimport { NavLink } from 'react-router-dom';\nimport { ListItem, ListItemProps } from '../ListItem/ListItem';\nimport styles from './ListItemLink.module.scss';\n\nexport interface ListItemLinkProps extends ListItemProps {\n    to: string\n}\n\nexport const ListItemLink: React.FC<ListItemLinkProps> = (props) => {  \n    return (\n        <NavLink exact to={props.to}\n            className={styles.component}\n            activeClassName={styles.active}>\n            <ListItem {...props} />\n        </NavLink>\n    );\n};\n\nexport default ListItemLink;","import React from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport Media from 'react-media';\nimport { mediaQueries } from 'utils';\nimport styles from './MasterDetail.module.scss';\n\nexport interface MasterDetailProps {\n    MasterType: any,\n    masterProps: any,\n    DetailType:  any,\n    detailProps: any\n}\n\nexport const MasterDetail: React.FC<MasterDetailProps> = (props) => {\n    let { path } = useRouteMatch() as any;\n    const master = (\n        <props.MasterType {...props.masterProps}\n            data-test=\"Master\" />);\n    const detail = (\n        <props.DetailType {...props.detailProps} \n            data-test=\"Detail\" />);\n\n    return ( \n        <Media query={mediaQueries.md}>\n            {matches =>\n                matches ? (\n                    <Switch>\n                        <Route exact path={`${path}`}>\n                            {master}\n                        </Route>\n                        <Route path={`${path}/detail/:id`}>\n                            {detail}\n                        </Route>\n                    </Switch>\n                ) : (\n                    <section className={styles.component}>\n                        <section className={styles.master}>\n                            <Route path={`${path}`}>\n                                {master}\n                            </Route>\n                        </section>\n                        <section className={styles.detail}>\n                            <Switch>\n                                <Route exact path={`${path}`}>\n                                    {detail} \n                                </Route>\n                                <Route path={`${path}/detail/:id`}>\n                                    {detail}\n                                </Route>\n                            </Switch>\n                        </section>\n                    </section>\n                    )\n            }\n        </Media>\n    );\n};","import { Item } from './example.model';\n\nexport interface IJob {\n    JobId: string,\n    RequestId: number,\n    TimeLineId: string\n}\n\nexport const getJobById = (jobs : IJob[], id: number | string | undefined): { item: Item | null } => {\n    const actualId = (typeof id === 'string') ?\n        parseInt(id, 10): id;\n    var item : Item | null = null;\n    if(actualId !== undefined && actualId !== null) {\n        var x : IJob | null = jobs.find((x, i, obj) => x.RequestId === actualId) || null;\n        if(x !== null) {\n            item = { id:  x.RequestId, title: x.JobId, description: x.TimeLineId }\n            return { item : item };\n        }\n    }\n    return { item : null };\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Header } from 'components';\nimport { getJobById, IJob } from '../../state/store.selectors';\nimport { Item } from '../../state/example.model';\nimport styles from './Detail.module.scss';\nimport Convert from 'ansi-to-html'; \n\nimport Collapsible from 'react-collapsible';\nimport { ghHostApiUrl } from 'settings';\n\nexport interface DetailProps {\n    item: Item | null\n}\n\ninterface ILog {\n    id: number,\n    location: string\n    content: string\n}\n\ninterface ITimeLine {\n    id: string,\n    Type: string,\n    log: ILog | null,\n    order: Number,\n    name: string\n}\n\ninterface IJobEvent {\n    repo: string,\n    job: IJob \n}\n\ninterface ILogline {\n    line : string,\n    lineNumber: Number\n}\n\ninterface IRecord {\n    Value: string[],\n    StepId: string,\n    StartLine: Number\n    Count: Number\n}\n\ninterface ILoglineEvent {\n    recordId: string,\n    record: IRecord\n}\n\nexport const DetailContainer : React.FC<DetailProps> = (props) => {\n    const [ jobs, setJobs ] = useState<IJob[] | null>([]);\n    const [ timeline, setTimeline ] = useState<ITimeLine[]>([]);\n    const [ title, setTitle] = useState<string>(\"Loading...\");\n    const { id } = useParams();\n    const { owner, repo } = useParams();\n\n    useEffect(() => {\n        (async () => {\n            if(id === undefined) {\n                return;\n            }\n            var njobs : IJob[] | null;\n            var _id = Number.parseInt(id);\n            if(jobs.length === 0 || jobs.find(x => x.RequestId === _id) == null) {\n                njobs = await (await (await fetch(ghHostApiUrl + \"/\" + owner + \"/\" + repo + \"/_apis/v1/Message\", { })).json())\n                setJobs(njobs);\n            }\n            const item = getJobById(njobs || jobs, id).item\n            const timelineId = item ? item.description : null;\n            if(timelineId != null) {\n                var newTimeline = await (await fetch(ghHostApiUrl + \"/\" + owner + \"/\" + repo + \"/_apis/v1/Timeline/\" + timelineId, { })).json() as ITimeLine[];\n                if(newTimeline != null && newTimeline.length > 1) {\n                    setTitle(newTimeline.shift().name);\n                    var convert = new Convert({\n                        newline: true\n                    });\n                    for (const tl of newTimeline) {\n                        if (tl.log !== null && tl.log.id !== -1) {\n                            const log = await (await fetch(ghHostApiUrl + \"/\" + owner + \"/\" + repo + \"/_apis/v1/Logfiles/\" + tl.log.id, { })).text();\n                            tl.log.content = convert.toHtml(log);\n                        } else {\n                            try {\n                                tl.log = { id:-1, location: null, content: (await (await fetch(ghHostApiUrl + \"/\" + owner + \"/\" + repo + \"/_apis/v1/TimeLineWebConsoleLog/\" + timelineId + \"/\" + tl.id, { })).json() as ILogline[]).reduce((prev: string, c : ILogline) => prev + \"<br/>\" + convert.toHtml(c.line), \"\")};\n                            } catch {\n\n                            }\n                        }\n                    }\n                }\n                setTimeline(newTimeline);\n            }\n        })();\n    }, [id, jobs, owner, repo])\n    useEffect(() => {\n        if(id !== undefined && id !== null && id.length > 0) {\n            var item = getJobById(jobs, id).item;\n            if(item !== null) {\n                var source = new EventSource( + \"/\" + owner + \"/\" + repo + \"/_apis/v1/TimeLineWebConsoleLog?timelineId=\"+ item.description);\n                source.addEventListener (\"log\", (ev : MessageEvent) => {\n                    console.log(\"new logline \" + ev.data);\n                    var e = JSON.parse(ev.data) as ILoglineEvent;\n                    setTimeline(timeline => {\n                        var s = timeline.find(t => t.id === e.record.StepId);\n                        var convert = new Convert({\n                            newline: true,\n                            escapeXML: true\n                        });\n                        if(s != null) {\n                            if(s.log == null) {\n                                s.log = { id:-1, location: null, content: \"\"};\n                            }\n                            if (s.log.id === -1) {\n                                s.log.content = e.record.Value.reduce((prev: string, c : string) => prev + \"<br/>\" + convert.toHtml(c), s.log.content);\n                            }\n                        } else {\n                            (async () => {\n                                \n                            })();\n                        }\n                        return [...timeline];\n                    });\n                    \n                });\n                return () => {\n                    source.close();\n                }\n            }\n        }\n        return () => {}\n    }, [id, jobs, owner, repo]);\n\n    return (\n        <section className={styles.component}>\n        <Header title={title} />\n        <main className={styles.main}>\n            <div className={styles.text} style={{width: '100%'}}> \n                {timeline.map((item: ITimeLine) =>\n                    <Collapsible key={id + item.id} className={styles.Collapsible} openedClassName={styles.Collapsible} triggerClassName={styles.Collapsible__trigger} triggerOpenedClassName={styles.Collapsible__trigger + \" \" + styles[\"is-open\"]} contentOuterClassName={styles.Collapsible__contentOuter} contentInnerClassName={styles.Collapsible__contentInner} trigger={item.name}>\n                        <div style={{ textAlign: 'left', whiteSpace: 'nowrap', maxHeight: '100%', overflow: 'auto' }} dangerouslySetInnerHTML={{ __html: item.log != null ? item.log.content : \"Nothing here\" }}></div>\n                    </Collapsible>\n                )}\n            </div>\n        </main>\n        </section>\n    );\n};","import React, {useState,useEffect} from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { Header, ListItemLink } from 'components';\nimport { Items, Item } from 'state';\nimport { ghHostApiUrl } from 'settings';\nimport { useParams } from 'react-router-dom';\n\nexport interface MasterProps extends Items {\n}\ninterface IJob {\n    JobId: string,\n    RequestId: number,\n    TimeLineId: string\n}\ninterface IJobEvent {\n    repo: string,\n    job: IJob \n}\n\nexport const MasterContainer: React.FC<MasterProps> = (props) => {\n    let { url } = useRouteMatch();\n    const [ jobs, setJobs ] = useState<Items | null>({items: []});\n    const { owner, repo } = useParams();\n    useEffect(() => {\n        var apiUrl = ghHostApiUrl + \"/\" + owner + \"/\" + repo + \"/_apis/v1/Message\";\n        (async () => {\n            setJobs({ items: (JSON.parse((await (await fetch(apiUrl, { })).text())) as IJob[]).sort((a, b) => b.RequestId - a.RequestId).map((x : IJob) : Item => { return { id:  x.RequestId, title: x.JobId, description: x.TimeLineId }})});\n        })();\n        var source = new EventSource(ghHostApiUrl + \"/\" + owner + \"/\" + repo + \"/_apis/v1/Message/event?filter=**\");\n        source.addEventListener(\"job\", ev => {\n            var je = JSON.parse((ev as MessageEvent).data) as IJobEvent;\n            var x = je.job;\n            setJobs((jobs) => {\n                return { items: [{ id:  x.RequestId, title: x.JobId, description: x.TimeLineId }, ...jobs.items] };\n            });\n        });\n    }, [owner, repo])\n    return (\n        <React.Fragment>\n            <Header title=\"Jobs\" hideBackButton={true}/>\n            <ul>\n                {jobs.items.map((item: Item) =>\n                    <li key={item.id}>\n                        <ListItemLink \n                            to={`${url}/detail/${item.id}`} item={item} />\n                    </li>\n                )}\n            </ul>\n        </React.Fragment>\n    );\n};\n\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { MasterDetail } from 'components';\nimport { MasterContainer, DetailContainer } from 'containers';\n\nexport const App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/master/:owner/:repo\"\n          render={props => (\n            <MasterDetail MasterType={MasterContainer} masterProps={{}} \n                          DetailType={DetailContainer} detailProps={{}}/>\n          )} />\n        <Redirect exact from=\"/\" to=\"/master/runner/server\" />\n      </Switch>\n    </Router>\n  );\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Detail_component__1-q_u\",\"main\":\"Detail_main__2xXle\",\"Collapsible\":\"Detail_Collapsible__2slk1\",\"Collapsible__contentInner\":\"Detail_Collapsible__contentInner__3s9IG\",\"Collapsible__trigger\":\"Detail_Collapsible__trigger__O7Wcx\",\"is-open\":\"Detail_is-open__2vygp\",\"is-disabled\":\"Detail_is-disabled__2L3mn\",\"Collapsible__custom-sibling\":\"Detail_Collapsible__custom-sibling__1TuEJ\"};"],"sourceRoot":""}