{"version":3,"sources":["containers/Detail/Detail.module.scss","components/MasterDetail/MasterDetail.module.scss","components/Header/Header.module.scss","components/ListItem/ListItem.module.scss","components/ListItemLink/ListItemLink.module.scss","utils/media-queries.model.ts","components/Header/Header.tsx","components/ListItem/ListItem.tsx","components/ListItemLink/ListItemLink.tsx","components/MasterDetail/MasterDetail.tsx","settings.js","containers/Detail/Detail.tsx","containers/Master/Master.tsx","Owner.tsx","Repositories.tsx","WorkflowRuns.tsx","WorkflowRunAttempts.tsx","WorkflowRunAttempt.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","mediaQueries","Header","props","className","styles","header","query","matches","to","back","style","visibility","hideBackButton","title","content","defaultProps","listItemNoDataMessage","ListItem","component","inner","item","description","ListItemLink","exact","activeClassName","active","MasterDetail","path","useRouteMatch","master","MasterType","masterProps","detail","DetailType","detailProps","ghHostApiUrl","listArtifacts","runid","a","artifactUrl","fetch","response","text","body","JSON","parse","getContainerItems","artifactName","containerUrl","resourceUrl","URL","searchParams","append","toString","DetailContainer","useState","job","setJob","timeline","setTimeline","artifacts","setArtifacts","setTitle","id","useParams","owner","repo","errors","setErrors","updateTitle","result","name","jobToItem","jobId","timeLineId","useEffect","_","undefined","e","encodeURIComponent","json","length","timelineId","status","newTimeline","sort","b","parentId","order","value","i","count","element","fileContainerResourceUrl","items","files","source","EventSource","missed","callback","s","find","t","record","stepId","convert","Convert","newline","escapeXML","log","location","startLine","console","lines","missingLines","reduce","prev","c","toHtml","line","addEventListener","ev","data","push","oldtimeline","dict","Map","set","has","get","state","forEach","entry","shift","close","main","width","onClick","event","method","map","container","file","href","contentLocation","busy","failed","item2","logs","split","offset","re","test","substring","currentValue","textAlign","whiteSpace","maxHeight","overflow","fontFamily","dangerouslySetInnerHTML","__html","m","Collapsible","open","openedClassName","triggerClassName","Collapsible__trigger","triggerOpenedClassName","contentOuterClassName","Collapsible__contentOuter","contentInnerClassName","Collapsible__contentInner","trigger","onOpening","MasterContainer","url","jobs","setJobs","page","x","insertp","findIndex","j","attempt","requestId","sp","splice","final","apiUrl","newjobs","sjobs","useLocation","Fragment","pathname","replace","Number","parseInt","startsWith","workflowname","Owner","owners","setOwners","newOwners","Repositories","WorkflowRuns","fileName","WorkflowRunAttempts","run","WorkflowRunAttempt","objattempt","setObjattempt","App","render","from","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a8802083.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Detail_component__1VtCU\",\"main\":\"Detail_main__25Z8q\",\"Collapsible\":\"Detail_Collapsible__1Z6Fe\",\"Collapsible__contentInner\":\"Detail_Collapsible__contentInner__20oSV\",\"Collapsible__trigger\":\"Detail_Collapsible__trigger__3EOpG\",\"is-open\":\"Detail_is-open__2aL8y\",\"is-disabled\":\"Detail_is-disabled__wEqIO\",\"Collapsible__custom-sibling\":\"Detail_Collapsible__custom-sibling__3HRWD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"MasterDetail_component__154LI\",\"master\":\"MasterDetail_master__mykC2\",\"detail\":\"MasterDetail_detail__1KXQc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1rCD5\",\"back\":\"Header_back__1NWwX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"ListItem_component__2wbBh\",\"inner\":\"ListItem_inner__1YzSZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"ListItemLink_component__3_vwt\",\"active\":\"ListItemLink_active__IcDqn\"};","export const mediaQueries = {\n    xs: null,\n    sm: null,\n    md: '(max-width: 599px)',\n    lg: null,\n    xl: null\n};  ","import React, { ReactElement } from 'react';\nimport { Link } from 'react-router-dom';\nimport Media from 'react-media';\nimport { mediaQueries } from 'utils';\nimport styles from './Header.module.scss';\nimport { JsxElement } from 'typescript';\n\nexport interface HeaderProps {\n    title: string,\n    hideBackButton?: boolean,\n    content?: ReactElement<any, any>\n}\n\nexport const headerEmptyTitle = 'No Title';\n\nexport const Header: React.FC<HeaderProps> = (props) => {\n\n    return (\n        <div className={styles.header}>\n\n            <Media query={mediaQueries.md}>\n                { matches => matches ? (\n                    <Link to=\"../../../../\" className={styles.back}\n                        style={{ visibility: props.hideBackButton ? 'hidden' : 'visible' }}>\n                        Back\n                    </Link>\n                ): (\n                    <div>&nbsp;</div>\n                )}\n            </Media>\n\n            <h1 data-test=\"HeaderTitle\">\n                { props.title || headerEmptyTitle }\n                { props.content }\n            </h1>\n        </div> \n    );\n}\n\nHeader.defaultProps = {\n    hideBackButton: false\n};\n\nexport default Header;","import React from 'react'; \nimport { Item } from 'state';\nimport styles from './ListItem.module.scss';\n\nexport interface ListItemProps {\n    item: Item\n};\n\nexport const listItemNoDataMessage = 'No Data';\n\nexport const ListItem: React.FC<ListItemProps> = (props) => {\n    \n    return (\n        <div className={styles.component}>\n\n            <div className={styles.inner}>\n\n                <h1 data-test=\"ListItemHeading\">\n                    { props.item.title ? props.item.title : listItemNoDataMessage  }\n                </h1> \n\n                <h2 data-test=\"ListItemSubHeading\">\n                    { props.item.description ?  props.item.description : listItemNoDataMessage }\n                </h2>\n\n            </div>\n\n        </div> \n    );\n};\n\nexport default ListItem;","import React from 'react'; \nimport { NavLink } from 'react-router-dom';\nimport { ListItem, ListItemProps } from '../ListItem/ListItem';\nimport styles from './ListItemLink.module.scss';\n\nexport interface ListItemLinkProps extends ListItemProps {\n    to: string\n}\n\nexport const ListItemLink: React.FC<ListItemLinkProps> = (props) => {  \n    return (\n        <NavLink exact to={props.to}\n            className={styles.component}\n            activeClassName={styles.active}>\n            <ListItem {...props} />\n        </NavLink>\n    );\n};\n\nexport default ListItemLink;","import React from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport Media from 'react-media';\nimport { mediaQueries } from 'utils';\nimport styles from './MasterDetail.module.scss';\n\nexport interface MasterDetailProps {\n    MasterType: any,\n    masterProps: any,\n    DetailType:  any,\n    detailProps: any\n}\n\nexport const MasterDetail: React.FC<MasterDetailProps> = (props) => {\n    let { path } = useRouteMatch() as any;\n    const master = (\n        <props.MasterType {...props.masterProps}\n            data-test=\"Master\" />);\n    const detail = (\n        <props.DetailType {...props.detailProps} \n            data-test=\"Detail\" />);\n\n    return ( \n        <Media query={mediaQueries.md}>\n            {matches =>\n                matches ? (\n                    <Switch>\n                        <Route exact path={`${path}`}>\n                            {master}\n                        </Route>\n                        <Route path={`${path}/detail/:id`}>\n                            {detail}\n                        </Route>\n                    </Switch>\n                ) : (\n                    <section className={styles.component}>\n                        <section className={styles.master}>\n                            <Route path={`${path}`}>\n                                {master}\n                            </Route>\n                        </section>\n                        <section className={styles.detail}>\n                            <Switch>\n                                <Route exact path={`${path}`}>\n                                    {detail} \n                                </Route>\n                                <Route path={`${path}/detail/:id`}>\n                                    {detail}\n                                </Route>\n                            </Switch>\n                        </section>\n                    </section>\n                    )\n            }\n        </Media>\n    );\n};","export const ghHostApiUrl = \"\"","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Header } from 'components';\nimport { IJob, IJobCompletedEvent } from '../../state/store.selectors';\nimport { Item } from '../../state/example.model';\nimport styles from './Detail.module.scss';\nimport Convert from 'ansi-to-html'; \n\nimport Collapsible from 'react-collapsible';\nimport { ghHostApiUrl } from 'settings';\n\nexport interface DetailProps {\n    item: Item | null\n}\n\ninterface ILog {\n    id: number,\n    location: string\n    content: string\n}\n\ninterface ITimeLine {\n    id: string,\n    parentId: string,\n    Type: string,\n    log: ILog | null,\n    order: number,\n    name: string,\n    busy: boolean,\n    failed: boolean,\n    state: string,\n    result: string\n}\n\n// interface IJobEvent {\n//     repo: string,\n//     job: IJob \n// }\n\ninterface ILogline {\n    line : string,\n    lineNumber: number\n}\n\ninterface IRecord {\n    value: string[],\n    stepId: string,\n    startLine: number\n    count: number\n}\n\ninterface ILoglineEvent {\n    recordId: string,\n    record: IRecord\n}\n\ninterface ITimeLineEvent {\n    timeline: ITimeLine[],\n    timelineId: string\n}\n\n\n// Artifacts\n\nexport interface ArtifactResponse {\n    containerId: string\n    size: number\n    signedContent: string\n    fileContainerResourceUrl: string\n    type: string\n    name: string\n    url: string\n\n    files: ContainerEntry[] | null\n  }\n  \n  export interface CreateArtifactParameters {\n    Type: string\n    Name: string\n    RetentionDays?: number\n  }\n  \n  export interface PatchArtifactSize {\n    Size: number\n  }\n  \n  export interface PatchArtifactSizeSuccessResponse {\n    containerId: number\n    size: number\n    signedContent: string\n    type: string\n    name: string\n    url: string\n    uploadUrl: string\n  }\n  \n  export interface UploadResults {\n    uploadSize: number\n    totalSize: number\n    failedItems: string[]\n  }\n  \n  export interface ListArtifactsResponse {\n    count: number\n    value: ArtifactResponse[]\n  }\n  \n  export interface QueryArtifactResponse {\n    count: number\n    value: ContainerEntry[]\n  }\n  \n  export interface ContainerEntry {\n    containerId: number\n    scopeIdentifier: string\n    path: string\n    itemType: string\n    status: string\n    fileLength?: number\n    fileEncoding?: number\n    fileType?: number\n    dateCreated: string\n    dateLastModified: string\n    createdBy: string\n    lastModifiedBy: string\n    itemLocation: string\n    contentLocation: string\n    fileId?: number\n    contentId: string\n  }\n\n/**\n * Gets a list of all artifacts that are in a specific container\n */\nasync function listArtifacts(runid : number): Promise<ListArtifactsResponse> {\nconst artifactUrl = ghHostApiUrl + \"/_apis/pipelines/workflows/\" + runid + \"/artifacts\"\n\nconst response = await fetch(artifactUrl);\nconst body: string = await response.text()\nreturn JSON.parse(body)\n}\n\n/**\n   * Fetches a set of container items that describe the contents of an artifact\n   * @param artifactName the name of the artifact\n   * @param containerUrl the artifact container URL for the run\n   */\n async function getContainerItems(\n    artifactName: string,\n    containerUrl: string\n  ): Promise<QueryArtifactResponse> {\n    // the itemPath search parameter controls which containers will be returned\n    const resourceUrl = new URL(containerUrl)\n    resourceUrl.searchParams.append('itemPath', artifactName)\n\n    const response = await fetch(resourceUrl.toString());\n    const body: string = await response.text()\n    return JSON.parse(body)\n  }\n\n// End Artifacts\n\n\nexport const DetailContainer : React.FC<DetailProps> = (props) => {\n    const [ job, setJob ] = useState<IJob | null>(null);\n    const [ timeline, setTimeline ] = useState<ITimeLine[]>([]);\n    const [ artifacts, setArtifacts ] = useState<ArtifactResponse[]>([]);\n    const [ title, setTitle] = useState<string>(\"Loading...\");\n    const { id } = useParams<{id: string}>();\n    const { owner, repo } = useParams<{owner: string, repo: string}>();\n    const [ errors, setErrors] = useState<string[]>([]);\n    var updateTitle = (job: IJob) => {\n        setTitle(job.result ? \"Job \" + job.name + \" completed with result: \" + job.result : job.name);\n    }\n    var jobToItem = (job: IJob) : { item: Item | null, job: IJob | null } => { return { item: { id: job.jobId, title: job.name, description: job.timeLineId },job: job}};\n    useEffect(() => {\n        (async () => {\n            try {\n                setArtifacts(_ => []);\n                if(id === undefined) {\n                    setJob(null);\n                    setTitle(\"Please select a Job\");\n                    setTimeline(e => []);\n                    setErrors([]);\n                    return;\n                }\n                var job : IJob | null = await (await (await fetch(ghHostApiUrl + \"/_apis/v1/Message?jobid=\" + encodeURIComponent(id), { })).json());\n                setJob(job);\n                updateTitle(job);\n                var query = jobToItem(job);\n                if(query.job.errors !== null && query.job.errors.length > 0) {\n                    setErrors(query.job.errors);\n                } else {\n                    setErrors([]);\n                }\n                const item = query.item;\n                const timelineId = item ? item.description : null;\n                if(timelineId != null) {\n                    var timeline = await fetch(ghHostApiUrl + \"/_apis/v1/Timeline/\" + timelineId, { });\n                    if(timeline.status === 200) {\n                        var newTimeline = await timeline.json() as ITimeLine[];\n                        if(newTimeline != null && newTimeline.length > 0) {\n                            newTimeline.sort((a,b) => !a.parentId ? -1 : !b.parentId ? 1 : a.order - b.order);\n                            setTimeline(newTimeline);\n                        } else {\n                            setTimeline([]);\n                        }\n                    } else {\n                        setTitle((query.job.errors !== null && query.job.errors.length > 0) ? \"Job \" + query.job.name + \" failed to run\" : (query.job.result ? \"Job \" + query.job.name + \" completed with result: \" + query.job.result : \"Wait for job \" + query.job.name + \" to run...\"));\n                        setTimeline(e => []);\n                    }\n                }\n                if(query.job.runid !== -1) {\n                    var artifacts = await listArtifacts(query.job.runid);\n                    if(artifacts.value !== undefined) {\n                        for (let i = 0; i < artifacts.count; i++) {\n                            const element = artifacts.value[i];\n                            var items = await getContainerItems(element.name, element.fileContainerResourceUrl)\n                            if(items !== undefined) {\n                                element.files = items.value \n                            }\n                        }\n                        setArtifacts(_ => artifacts.value);\n                    }\n                }\n            } catch(err) {\n                setJob(null);\n                setTitle(\"Error: \" + err);\n                setTimeline(e => []);\n                setErrors([]);\n            }\n        })();\n    }, [id, owner, repo])\n    useEffect(() => {\n        if(job != null) {\n            var item = jobToItem(job).item;\n            if(item !== null && item.description && item.description !== '' && item.description !== \"00000000-0000-0000-0000-000000000000\") {\n                var source = new EventSource(ghHostApiUrl + \"/_apis/v1/TimeLineWebConsoleLog?timelineId=\"+ item.description);\n                try {\n                    var missed : ILoglineEvent[] = [];\n                    var callback = function(timeline, e:ILoglineEvent) {\n                        var s = timeline.find(t => t.id === e.record.stepId);\n                        var convert = new Convert({\n                            newline: true,\n                            escapeXML: true\n                        });\n                        if(s) {\n                            if(s.log == null) {\n                                s.log = { id:-1, location: null, content: \"\"};\n                                if(e.record.startLine > 1) {\n                                    (async () => {\n                                        console.log(\"Downloading previous log lines of this step...\");\n                                        var lines = await fetch(ghHostApiUrl + \"/_apis/v1/TimeLineWebConsoleLog/\" + item.description + \"/\" + e.record.stepId, { });\n                                        if(lines.status === 200) {\n                                            var missingLines = await lines.json() as ILogline[];\n                                            missingLines.length = e.record.startLine - 1;\n                                            s.log.content = missingLines.reduce((prev: string, c : ILogline) => (prev.length > 0 ? prev + \"<br/>\" : \"\") + convert.toHtml(c.line), \"\") + s.log.content;\n                                        } else {\n                                            console.log(\"No logs to download..., currently fixes itself\");\n                                        }\n                                    })();\n                                }\n                            }\n                            if (s.log.id === -1) {\n                                s.log.content = e.record.value.reduce((prev: string, c : string) => (prev.length > 0 ? prev + \"<br/>\" : \"\") + convert.toHtml(c), s.log.content);\n                            }\n                            return true;\n                        }\n                        return false;\n                    }\n                    source.addEventListener (\"log\", (ev : MessageEvent) => {\n                        console.log(\"new logline \" + ev.data);\n                        var e = JSON.parse(ev.data) as ILoglineEvent;\n                        setTimeline(timeline => {\n                            if(callback(timeline, e)) {\n                                return [...timeline];\n                            }\n                            missed.push(e);\n                            return timeline;\n                        });\n                    });\n                    source.addEventListener (\"timeline\", (ev : MessageEvent) => {\n                        var e = JSON.parse(ev.data) as ITimeLineEvent;\n                        setTitle(e.timeline[0].name);\n                        setTimeline(oldtimeline => {\n                            var dict = new Map<string, ITimeLine>();\n                            for (let i = 0; i < oldtimeline.length; i++) {\n                                dict.set(oldtimeline[i].id, oldtimeline[i]);\n                            }\n                            for (let i = 0; i < e.timeline.length; i++) {\n                                if(dict.has(e.timeline[i].id)) {\n                                    dict.get(e.timeline[i].id).name = e.timeline[i].name;\n                                    dict.get(e.timeline[i].id).result = e.timeline[i].result;\n                                    dict.get(e.timeline[i].id).state = e.timeline[i].state;\n                                } else {\n                                    dict.set(e.timeline[i].id, e.timeline[i]);\n                                }\n                            }\n                            if(e.timeline.length === 0) {\n                                // Todo Merge Timelines here\n                                return oldtimeline;\n                            }\n                            \n                            var timeline : ITimeLine[] = [];\n                            dict.forEach(entry => timeline.push(entry));\n                            timeline.sort((a,b) => !a.parentId ? -1 : !b.parentId ? 1 : a.order - b.order);\n                            for (; missed.length > 0;) {\n                                if(callback(timeline, missed[0])) {\n                                    missed.shift();\n                                } else {\n                                    break;\n                                }\n                            }\n                            return timeline;\n                        });\n                        // console.log(ev.data)\n                    });\n                    source.addEventListener(\"finish\", (ev : MessageEvent) => {\n                        var e = JSON.parse(ev.data) as IJobCompletedEvent;\n                        if(e.jobId === id) {\n                            (async function() {\n                                job.result = e.result;\n                                updateTitle(job);\n                            })()\n                        }\n                    });\n                } finally {\n                    return () => {\n                        source.close();\n                    }\n                }\n            }\n        }\n        return () => {}\n    }, [id, job, owner, repo]);\n\n    return (\n        <section className={styles.component}>\n        <Header title={title} />\n        <main className={styles.main}>\n            <div className={styles.text} style={{width: '100%'}}>\n                {(() => {\n                    if(job !== undefined && job != null) {\n                        if(!job.result && (!job.errors || job.errors.length === 0)) {\n                            return <div>\n                                <button onClick={(event) => {\n                                    (async () => {\n                                        await fetch(ghHostApiUrl + \"/_apis/v1/Message/cancelWorkflow/\" + job.runid, { method: \"POST\" });\n                                    })();\n                                }}>Cancel Workflow</button>\n                                <button onClick={(event) => {\n                                    (async () => {\n                                        await fetch(ghHostApiUrl + \"/_apis/v1/Message/cancel/\" + job.jobId, { method: \"POST\" });\n                                    })();\n                                }}>Cancel</button>\n                            </div>;\n                        } else {\n                            return <div>\n                                <button onClick={(event) => {\n                                    (async () => {\n                                        await fetch(ghHostApiUrl + \"/_apis/v1/Message/rerunworkflow/\" + job.runid, { method: \"POST\" });\n                                    })();\n                                }}>Rerun Workflow</button>\n                                <button onClick={(event) => {\n                                    (async () => {\n                                        await fetch(ghHostApiUrl + \"/_apis/v1/Message/rerunFailed/\" + job.runid, { method: \"POST\" });\n                                    })();\n                                }}>Rerun Failed Jobs</button>\n                                <button onClick={(event) => {\n                                    (async () => {\n                                        await fetch(ghHostApiUrl + \"/_apis/v1/Message/rerun/\" + job.jobId, { method: \"POST\" });\n                                    })();\n                                }}>Rerun</button>\n                            </div>;\n                        }\n                    }\n                })()\n                }\n                \n                {errors.map(e => <div>Error: {e}</div>)}\n                {artifacts.map((container: ArtifactResponse) => <div><div>{container.name}</div>{(() => {\n                    if(container.files !== undefined) {\n                        return container.files.map(file => <div><a href={file.contentLocation}>{file.path}</a></div>);\n                    }\n                    return <div/>;\n                })()}</div>)}\n                {(() => {\n                    if(timeline.length == 1) {\n                        var item = timeline[0];\n                        if(!item.busy && !item.failed && (item.log == null || (item.log.id !== -1 && (!item.log.content || item.log.content.length === 0)))) {\n                            item.busy = true;\n                            (async() => {\n                                try {\n                                    var convert = new Convert({\n                                        newline: true,\n                                        escapeXML: true\n                                    });\n                                    if(item.log == null) {\n                                        console.log(\"Downloading previous log lines of this step...\");\n                                        const item2 = jobToItem(job).item;\n                                        var logs = await fetch(ghHostApiUrl + \"/_apis/v1/TimeLineWebConsoleLog/\" + item2.description + \"/\" + item.id, { });\n                                        if(logs.status === 200) {\n                                            var missingLines = await logs.json() as ILogline[];\n                                            item.log = { id: -1, location: null, content: missingLines.reduce((prev: string, c : ILogline) => (prev.length > 0 ? prev + \"<br/>\" : \"\") + convert.toHtml(c.line), \"\") };\n                                        } else {\n                                            console.log(\"No logs to download...\");\n                                        }\n                                    } else {\n                                        const log = await (await fetch(ghHostApiUrl + \"/_apis/v1/Logfiles/\" + item.log.id, { })).text();\n                                        var lines = log.split('\\n');\n                                        var offset = '2021-04-02T15:50:14.6619714Z '.length;\n                                        var re = /^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{7}Z /;\n                                        lines[0] = convert.toHtml(re.test(lines[0]) ? lines[0].substring(offset) : lines[0]);\n                                        item.log.content = lines.reduce((prev, currentValue) => (prev.length > 0 ? prev + \"<br/>\" : \"\") + convert.toHtml(re.test(currentValue) ? currentValue.substring(offset) : currentValue));\n                                    }\n                                } catch {\n                                    item.failed = true;\n                                } finally {\n                                    item.busy = false;\n                                    // that.forceUpdate();\n                                    setTimeline((t) => {\n                                        return [...t];\n                                    });\n                                }\n                            })();\n                        }\n                        return <div style={{ textAlign: 'left', whiteSpace: 'pre', maxHeight: '100%', overflow: 'auto', fontFamily: \"SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace\" }} dangerouslySetInnerHTML={{ __html: item.log != null ? item.log.content : \"Nothing here\" }}></div>\n                    }\n                    var m = timeline.map((item: ITimeLine, i) =>\n                        <Collapsible key={id + item.id} className={styles.Collapsible} open={false} openedClassName={styles.Collapsible} triggerClassName={styles.Collapsible__trigger} triggerOpenedClassName={styles.Collapsible__trigger + \" \" + styles[\"is-open\"]} contentOuterClassName={styles.Collapsible__contentOuter} contentInnerClassName={styles.Collapsible__contentInner} trigger={(item.result == null ? item.state == null ? \"Waiting\" : item.state  : item.result) + \" - \" + item.name} onOpening={() => {\n                            if(i != 0 && !item.busy && (item.log == null || (item.log.id !== -1 && (!item.log.content || item.log.content.length === 0)))) {\n                                item.busy = true;\n                                (async() => {\n                                    try {\n                                        var convert = new Convert({\n                                            newline: true,\n                                            escapeXML: true\n                                        });\n                                        if(item.log == null) {\n                                            console.log(\"Downloading previous log lines of this step...\");\n                                            const item2 = jobToItem(job).item;\n                                            var logs = await fetch(ghHostApiUrl + \"/_apis/v1/TimeLineWebConsoleLog/\" + item2.description + \"/\" + item.id, { });\n                                            if(logs.status === 200) {\n                                                var missingLines = await logs.json() as ILogline[];\n                                                item.log = { id: -1, location: null, content: missingLines.reduce((prev: string, c : ILogline) => (prev.length > 0 ? prev + \"<br/>\" : \"\") + convert.toHtml(c.line), \"\") };\n                                            } else {\n                                                console.log(\"No logs to download...\");\n                                            }\n                                        } else {\n                                            const log = await (await fetch(ghHostApiUrl + \"/_apis/v1/Logfiles/\" + item.log.id, { })).text();\n                                            var lines = log.split('\\n');\n                                            var offset = '2021-04-02T15:50:14.6619714Z '.length;\n                                            var re = /^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{7}Z /;\n                                            lines[0] = convert.toHtml(re.test(lines[0]) ? lines[0].substring(offset) : lines[0]);\n                                            item.log.content = lines.reduce((prev, currentValue) => (prev.length > 0 ? prev + \"<br/>\" : \"\") + convert.toHtml(re.test(currentValue) ? currentValue.substring(offset) : currentValue));\n                                        }\n                                    } finally {\n                                        item.busy = false;\n                                        // that.forceUpdate();\n                                        setTimeline((t) => {\n                                            return [...t];\n                                        });\n                                    }\n                                })();\n                            }\n                        }}>\n                            <div style={{ textAlign: 'left', whiteSpace: 'pre', maxHeight: '100%', overflow: 'auto', fontFamily: \"SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace\" }} dangerouslySetInnerHTML={{ __html: item.log != null ? item.log.content : \"Nothing here\" }}></div>\n                        </Collapsible>\n                    );\n                    m.shift();\n                    return m;\n                }\n                )()}\n            </div>\n        </main>\n        </section>\n    );\n};","import React, {useState,useEffect} from 'react';\nimport { useRouteMatch, Link, useLocation, useParams } from 'react-router-dom';\nimport { Header, ListItemLink } from 'components';\nimport { Items } from 'state';\nimport { ghHostApiUrl } from 'settings';\n\nexport interface MasterProps extends Items {\n}\ninterface IJob {\n    jobId: string,\n    requestId: number,\n    timeLineId: string,\n    name: string,\n    repo: string\n    workflowname: string\n    runid : number\n    attempt : number\n}\ninterface IJobEvent {\n    repo: string,\n    job: IJob \n}\n\nexport const MasterContainer: React.FC<MasterProps> = (props) => {\n    let { url } = useRouteMatch();\n    const [ jobs, setJobs ] = useState<IJob[]>([]);\n    const { page } = useParams<{page: string}>();\n    const owner = \"runner\";\n    const repo = \"runner\";\n    useEffect(() => {\n        var source = new EventSource(ghHostApiUrl + \"/\" + owner + \"/\" + repo + \"/_apis/v1/Message/event?filter=**\");\n        try {\n            if(!page || page === \"0\") {\n                source.addEventListener(\"job\", ev => {\n                    var je = JSON.parse((ev as MessageEvent).data) as IJobEvent;\n                    var x = je.job;\n                    setJobs(jobs => {\n                        var insertp = jobs.findIndex(j => j.runid < x.runid || j.attempt < x.attempt || j.requestId < x.requestId)\n                        var sp = jobs.splice(insertp);\n                        var final = [...jobs, x, ...sp];\n                        // Remove elements from first page\n                        if(final.length > 30) {\n                            final.length = 30;\n                        }\n                        return final;\n                    });\n                });\n            }\n            var apiUrl = ghHostApiUrl + \"/\" + owner + \"/\" + repo + \"/_apis/v1/Message?page=\" + (page || \"0\");\n            (async () => {\n                var newjobs = JSON.parse((await (await fetch(apiUrl, { })).text())) as IJob[];\n                var sjobs = newjobs.sort((j, x) => x.runid - j.runid || x.attempt - j.attempt || x.requestId - j.requestId || 0);\n                setJobs(_ => {\n                    return sjobs;\n                });\n            })();\n        } finally {\n            return () => {\n                source.close();\n            }\n        }\n    }, [page])\n    const location = useLocation<string>();\n    return (\n        <React.Fragment>\n            <Header title=\"Jobs\" hideBackButton={true} content={\n                <div>\n                    <Link to={location.pathname.replace(\"/\" + (page || \"master\"), \"/\" + (Number.parseInt(page || \"0\") - 1))} style={{ visibility: location.pathname.startsWith('/master/') || location.pathname === '/master' || location.pathname.startsWith('/0/') || location.pathname === '/0' ? 'hidden' : 'visible' }}>\n                        Previous\n                    </Link>\n                    <Link to={location.pathname.replace(\"/\" + (page || \"master\"), \"/\" + (Number.parseInt(page || \"0\") + 1))} >\n                        Next\n                    </Link>\n                </div>\n            }/>\n            <ul>\n                {jobs.map((x: IJob) =>\n                    <li key={x.jobId}>\n                        <ListItemLink \n                            to={`${url}/detail/${encodeURIComponent(x.jobId)}`} item={{ id:  x.jobId, title: x.name, description: x.workflowname + \" \" + x.repo + \" \" + x.runid }} />\n                    </li>\n                )}\n            </ul>\n        </React.Fragment>\n    );\n};\n\n","import React, {useState,useEffect} from 'react';\nimport { useRouteMatch, Link, useLocation, useParams } from 'react-router-dom';\nimport { Header, ListItemLink } from 'components';\nimport { Items } from 'state';\nimport { ghHostApiUrl } from 'settings';\n\nexport interface OwnerProps {\n}\ninterface IOwner {\n    name: string,\n}\n\nexport const Owner: React.FC<OwnerProps> = (props) => {\n    let { url } = useRouteMatch();\n    const [ owners, setOwners ] = useState<IOwner[]>([]);\n    const { page } = useParams<{page: string}>();\n    useEffect(() => {\n        var apiUrl = ghHostApiUrl + \"/_apis/v1/Message/owners?page=\" + (page || \"0\");\n        (async () => {\n            var newOwners = JSON.parse((await (await fetch(apiUrl, { })).text())) as IOwner[];\n            setOwners(_ => {\n                return newOwners;\n            });\n        })();\n    }, [page])\n    const location = useLocation<string>();\n    return (\n        <React.Fragment>\n            <Header title=\"Owner\" hideBackButton={true} content={\n                <div>\n                    <Link to={location.pathname.replace(\"/\" + (page || \"master\"), \"/\" + (Number.parseInt(page || \"0\") - 1))} style={{ visibility: location.pathname.startsWith('/master/') || location.pathname === '/master' || location.pathname.startsWith('/0/') || location.pathname === '/0' ? 'hidden' : 'visible' }}>\n                        Previous\n                    </Link>\n                    <Link to={location.pathname.replace(\"/\" + (page || \"master\"), \"/\" + (Number.parseInt(page || \"0\") + 1))} >\n                        Next\n                    </Link>\n                </div>\n            }/>\n            <ul>\n                {owners.map((x: IOwner) =>\n                    <li key={x.name}>\n                        <ListItemLink \n                            to={`${url}/${encodeURIComponent(x.name)}`} item={{ id:  x.name, title: x.name, description: \"\" }} />\n                    </li>\n                )}\n            </ul>\n        </React.Fragment>\n    );\n};\n\n","import React, {useState,useEffect} from 'react';\nimport { useRouteMatch, Link, useLocation, useParams } from 'react-router-dom';\nimport { Header, ListItemLink } from 'components';\nimport { Items } from 'state';\nimport { ghHostApiUrl } from 'settings';\n\nexport interface RepositoriesProps {\n}\ninterface IRepository {\n    name: string,\n}\n\nexport const Repositories: React.FC<RepositoriesProps> = (props) => {\n    let { url } = useRouteMatch();\n    const [ owners, setOwners ] = useState<IRepository[]>([]);\n    const { page, owner } = useParams<{page: string, owner: string}>();\n    useEffect(() => {\n        var apiUrl = `${ghHostApiUrl}/_apis/v1/Message/repositories?owner=${encodeURIComponent(owner)}&page=${page || \"0\"}`;\n        (async () => {\n            var newOwners = JSON.parse((await (await fetch(apiUrl, { })).text())) as IRepository[];\n            setOwners(_ => {\n                return newOwners;\n            });\n        })();\n    }, [page, owner])\n    const location = useLocation<string>();\n    return (\n        <React.Fragment>\n            <Header title={`Repositories ${owner}`} hideBackButton={false} content={\n                <div>\n                    <Link to={location.pathname.replace(\"/\" + (page || \"master\"), \"/\" + (Number.parseInt(page || \"0\") - 1))} style={{ visibility: location.pathname.startsWith('/master/') || location.pathname === '/master' || location.pathname.startsWith('/0/') || location.pathname === '/0' ? 'hidden' : 'visible' }}>\n                        Previous\n                    </Link>\n                    <Link to={location.pathname.replace(\"/\" + (page || \"master\"), \"/\" + (Number.parseInt(page || \"0\") + 1))} >\n                        Next\n                    </Link>\n                </div>\n            }/>\n            <ul>\n                {owners.map((x: IRepository) =>\n                    <li key={x.name}>\n                        <ListItemLink \n                            to={`${url}/${encodeURIComponent(x.name)}`} item={{ id:  x.name, title: x.name, description: \"\" }} />\n                    </li>\n                )}\n            </ul>\n        </React.Fragment>\n    );\n};\n\n","import React, {useState,useEffect} from 'react';\nimport { useRouteMatch, Link, useLocation, useParams } from 'react-router-dom';\nimport { Header, ListItemLink } from 'components';\nimport { Items } from 'state';\nimport { ghHostApiUrl } from 'settings';\n\nexport interface WorkflowRunsProps {\n}\ninterface IWorkflowRun {\n    id: string,\n    fileName: string\n}\n\nexport const WorkflowRuns: React.FC<WorkflowRunsProps> = (props) => {\n    let { url } = useRouteMatch();\n    const [ owners, setOwners ] = useState<IWorkflowRun[]>([]);\n    const { page, owner, repo } = useParams<{page: string, owner: string, repo: string}>();\n    useEffect(() => {\n        var apiUrl = `${ghHostApiUrl}/_apis/v1/Message/workflow/runs?owner=${encodeURIComponent(owner)}&repo=${encodeURIComponent(repo)}&page=${page || \"0\"}`;\n        (async () => {\n            var newOwners = JSON.parse((await (await fetch(apiUrl, { })).text())) as IWorkflowRun[];\n            setOwners(_ => {\n                return newOwners;\n            });\n        })();\n    }, [page, owner, repo])\n    const location = useLocation<string>();\n    return (\n        <React.Fragment>\n            <Header title={`WorkflowRuns ${owner}/${repo}`} hideBackButton={false} content={\n                <div>\n                    <Link to={location.pathname.replace(\"/\" + (page || \"master\"), \"/\" + (Number.parseInt(page || \"0\") - 1))} style={{ visibility: location.pathname.startsWith('/master/') || location.pathname === '/master' || location.pathname.startsWith('/0/') || location.pathname === '/0' ? 'hidden' : 'visible' }}>\n                        Previous\n                    </Link>\n                    <Link to={location.pathname.replace(\"/\" + (page || \"master\"), \"/\" + (Number.parseInt(page || \"0\") + 1))} >\n                        Next\n                    </Link>\n                </div>\n            }/>\n            <ul>\n                {owners.map((x: IWorkflowRun) =>\n                    <li key={x.id}>\n                        <ListItemLink \n                            to={`${url}/${encodeURIComponent(x.id)}`} item={{ id:  x.id, title: x.id, description: x.fileName }} />\n                    </li>\n                )}\n            </ul>\n        </React.Fragment>\n    );\n};\n\n","import React, {useState,useEffect} from 'react';\nimport { useRouteMatch, Link, useLocation, useParams } from 'react-router-dom';\nimport { Header, ListItemLink } from 'components';\nimport { Items } from 'state';\nimport { ghHostApiUrl } from 'settings';\n\nexport interface WorkflowRunAttemptsProps {\n}\ninterface IWorkflowRun {\n    attempt: string,\n    fileName: string\n}\n\nexport const WorkflowRunAttempts: React.FC<WorkflowRunAttemptsProps> = (props) => {\n    let { url } = useRouteMatch();\n    const [ owners, setOwners ] = useState<IWorkflowRun[]>([]);\n    const { page, owner, repo, run } = useParams<{page: string, owner: string, repo: string, run: string}>();\n    useEffect(() => {\n        var apiUrl = `${ghHostApiUrl}/_apis/v1/Message/workflow/run/${run}/attempts?owner=${encodeURIComponent(owner)}&repo=${encodeURIComponent(repo)}&page=${page || \"0\"}`;\n        (async () => {\n            var newOwners = JSON.parse((await (await fetch(apiUrl, { })).text())) as IWorkflowRun[];\n            setOwners(_ => {\n                return newOwners;\n            });\n        })();\n    }, [page, owner, repo])\n    const location = useLocation<string>();\n    return (\n        <React.Fragment>\n            <Header title={`WorkflowRunAttempts ${owner}/${repo}`} hideBackButton={false} content={\n                <div>\n                    <Link to={location.pathname.replace(\"/\" + (page || \"master\"), \"/\" + (Number.parseInt(page || \"0\") - 1))} style={{ visibility: location.pathname.startsWith('/master/') || location.pathname === '/master' || location.pathname.startsWith('/0/') || location.pathname === '/0' ? 'hidden' : 'visible' }}>\n                        Previous\n                    </Link>\n                    <Link to={location.pathname.replace(\"/\" + (page || \"master\"), \"/\" + (Number.parseInt(page || \"0\") + 1))} >\n                        Next\n                    </Link>\n                </div>\n            }/>\n            <ul>\n                {owners.map((x: IWorkflowRun) =>\n                    <li key={x.attempt}>\n                        <ListItemLink \n                            to={`${url}/${encodeURIComponent(x.attempt)}`} item={{ id:  x.attempt, title: x.attempt, description: x.fileName }} />\n                    </li>\n                )}\n            </ul>\n        </React.Fragment>\n    );\n};\n\n","import React, {useState,useEffect} from 'react';\nimport { useRouteMatch, Link, useLocation, useParams } from 'react-router-dom';\nimport { Header, ListItemLink } from 'components';\nimport { Items } from 'state';\nimport { ghHostApiUrl } from 'settings';\nimport Convert from 'ansi-to-html'; \n\nexport interface WorkflowRunAttemptProps {\n}\ninterface IWorkflowRunAttempt {\n    attempt: string,\n    fileName: string,\n    timeLineId: string\n}\n\n\ninterface ILog {\n    id: number,\n    location: string\n    content: string\n}\n\ninterface ITimeLine {\n    id: string,\n    parentId: string,\n    Type: string,\n    log: ILog | null,\n    order: number,\n    name: string,\n    busy: boolean,\n    failed: boolean,\n    state: string,\n    result: string\n}\n\ninterface ILogline {\n    line : string,\n    lineNumber: number\n}\n\ninterface IRecord {\n    value: string[],\n    stepId: string,\n    startLine: number\n    count: number\n}\n\ninterface ILoglineEvent {\n    recordId: string,\n    record: IRecord\n}\n\ninterface ITimeLineEvent {\n    timeline: ITimeLine[],\n    timelineId: string\n}\n\nexport const WorkflowRunAttempt: React.FC<WorkflowRunAttemptProps> = (props) => {\n    let { url } = useRouteMatch();\n    const [ objattempt, setObjattempt ] = useState<IWorkflowRunAttempt>(null);\n    const [ timeline, setTimeline ] = useState<ITimeLine[]>([]);\n    const { page, owner, repo, run, attempt } = useParams<{page: string, owner: string, repo: string, run: string, attempt: string}>();\n    useEffect(() => {\n        var apiUrl = `${ghHostApiUrl}/_apis/v1/Message/workflow/run/${run}/attempt/${attempt}?owner=${encodeURIComponent(owner)}&repo=${encodeURIComponent(repo)}&page=${page || \"0\"}`;\n        (async () => {\n            var newOwners = JSON.parse((await (await fetch(apiUrl, { })).text())) as IWorkflowRunAttempt;\n            setObjattempt(_ => {\n                return newOwners;\n            });\n            var timeline = await fetch(ghHostApiUrl + \"/_apis/v1/Timeline/\" + newOwners.timeLineId, { });\n            if(timeline.status === 200) {\n                var newTimeline = await timeline.json() as ITimeLine[];\n                if(newTimeline != null && newTimeline.length > 0) {\n                    newTimeline.sort((a,b) => !a.parentId ? -1 : !b.parentId ? 1 : a.order - b.order);\n                    setTimeline(newTimeline);\n                } else {\n                    setTimeline([]);\n                }\n            }\n        })();\n    }, [page, owner, repo, run, attempt])\n    const location = useLocation<string>();\n    return (\n        <React.Fragment>\n            <Header title={`WorkflowRunAttempt ${owner}/${repo}`} hideBackButton={false}/>\n            {(() => {\n                if(timeline.length == 1) {\n                    var item = timeline[0];\n                    if(!item.busy && !item.failed && (item.log == null || (item.log.id !== -1 && (!item.log.content || item.log.content.length === 0)))) {\n                        item.busy = true;\n                        (async() => {\n                            try {\n                                var convert = new Convert({\n                                    newline: true,\n                                    escapeXML: true\n                                });\n                                if(item.log == null) {\n                                    console.log(\"Downloading previous log lines of this step...\");\n                                    var logs = await fetch(ghHostApiUrl + \"/_apis/v1/TimeLineWebConsoleLog/\" + objattempt.timeLineId + \"/\" + objattempt.timeLineId, { });\n                                    if(logs.status === 200) {\n                                        var missingLines = await logs.json() as ILogline[];\n                                        item.log = { id: -1, location: null, content: missingLines.reduce((prev: string, c : ILogline) => (prev.length > 0 ? prev + \"<br/>\" : \"\") + convert.toHtml(c.line), \"\") };\n                                    } else {\n                                        console.log(\"No logs to download...\");\n                                    }\n                                } else {\n                                    const log = await (await fetch(ghHostApiUrl + \"/_apis/v1/Logfiles/\" + item.log.id, { })).text();\n                                    var lines = log.split('\\n');\n                                    var offset = '2021-04-02T15:50:14.6619714Z '.length;\n                                    var re = /^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{7}Z /;\n                                    lines[0] = convert.toHtml(re.test(lines[0]) ? lines[0].substring(offset) : lines[0]);\n                                    item.log.content = lines.reduce((prev, currentValue) => (prev.length > 0 ? prev + \"<br/>\" : \"\") + convert.toHtml(re.test(currentValue) ? currentValue.substring(offset) : currentValue));\n                                }\n                            } catch {\n                                item.failed = true;\n                            } finally {\n                                item.busy = false;\n                                // that.forceUpdate();\n                                setTimeline((t) => {\n                                    return [...t];\n                                });\n                            }\n                        })();\n                    }\n                    return <div style={{ textAlign: 'left', whiteSpace: 'pre', maxHeight: '100%', overflow: 'auto', fontFamily: \"SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace\" }} dangerouslySetInnerHTML={{ __html: item.log != null ? item.log.content : \"Nothing here\" }}></div>\n                }\n            })()}\n        </React.Fragment>\n    );\n};\n\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { MasterDetail } from 'components';\nimport { MasterContainer, DetailContainer } from 'containers';\nimport { Owner } from 'Owner';\nimport { Repositories } from 'Repositories';\nimport { WorkflowRuns } from 'WorkflowRuns';\nimport { WorkflowRunAttempts } from 'WorkflowRunAttempts';\nimport { WorkflowRunAttempt } from 'WorkflowRunAttempt';\n\nexport const App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/owner/:owner/:repo/:run/:attempt\"\n          render={props => (\n            <WorkflowRunAttempt></WorkflowRunAttempt>\n          )} />\n        <Route path=\"/owner/:owner/:repo/:run\"\n          render={props => (\n            <WorkflowRunAttempts></WorkflowRunAttempts>\n          )} />\n        <Route path=\"/owner/:owner/:repo\"\n          render={props => (\n            <WorkflowRuns></WorkflowRuns>\n          )} />\n        <Route path=\"/owner/:owner\"\n          render={props => (\n            <Repositories></Repositories>\n          )} />\n        <Route path=\"/owner\"\n          render={props => (\n            <Owner></Owner>\n          )} />\n        <Route path=\"/master/:owner/:repo\"\n          render={props => (\n            <MasterDetail MasterType={MasterContainer} masterProps={{}} \n                          DetailType={DetailContainer} detailProps={{}}/>\n          )} />\n        <Route path=\"/:page/:owner/:repo\"\n          render={props => (\n            <MasterDetail MasterType={MasterContainer} masterProps={{}} \n                          DetailType={DetailContainer} detailProps={{}}/>\n          )} />\n        <Redirect exact from=\"/\" to=\"/master/runner/server\" />\n      </Switch>\n    </Router>\n  );\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}