name: dotnet tool
on:
- push
- workflow_dispatch
jobs:
  package:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
    - name: GenerateConstant
      run: dotnet msbuild ./dir.proj -t:GenerateConstant /p:RunnerVersion=$(Get-Content ./runnerversion) /p:PackageRuntime=any
      shell: pwsh
      working-directory: ./src
    - name: Restore
      run: dotnet restore
      shell: pwsh
      working-directory: ./src/Runner.Client
    - name: Build
      id: build
      run: |
        $d = Get-Date
        $runnerversion = $($(Get-Content ../runnerversion) + "-preview." + $d.Year + "." + $d.Month + "." + $d.Day + "." + $d.Hour + "." + $d.Minute + "." + $d.Second + "." + $ENV:GITHUB_RUN_ID)
        dotnet build --no-restore /p:BUILD_OS=Any /p:Version=$runnerversion
        echo $('::set-output name=version::' + $runnerversion)
      shell: pwsh
      working-directory: ./src/Runner.Client
    - name: Pack
      run: |
        dotnet pack --no-restore --no-build /p:Version=${{steps.build.outputs.version}}
      shell: pwsh
      working-directory: ./src/Runner.Client
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: nupkg
        path: src/Runner.Client/nupkg
    - name: Push to Nuget
      if: false && env.GHARUN != ''
      run: dotnet nuget push ./*.nupkg --api-key $($ENV:GHARUN) --source https://api.nuget.org/v3/index.json
      shell: pwsh
      working-directory: ./src/Runner.Client/nupkg
      env:
        GHARUN: ${{secrets.GHARUN}}
  test:
    needs:
    - package
    strategy:
      matrix:
        os:
        - windows-latest
        - ubuntu-latest
        - macos-latest
        dotnet-version:
        - '5.0.9'
        - '5.0.x'
    runs-on: ${{matrix.os}}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{matrix.dotnet-version}}
    - run: mkdir src/Runner.Client/nupkg
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: nupkg
        path: src/Runner.Client/nupkg
    - name: Install
      run: |
        dotnet tool install -g io.github.christopherhx.gharun --add-source src/Runner.Client/nupkg --version ${{steps.build.outputs.version}}
    - name: Test
      run: |
        gharun -W testworkflows/testlocalcheckout.yml
        gharun -W testworkflows/cache.yml -P ubuntu-latest=-self-hosted
        gharun -W testworkflows/testhashfiles.yml
        gharun -W testworkflows/dumpcontexts.yml
        gharun -P ubuntu-latest=-self-hosted -W testworkflows/matrixtest.yml --parallel 1
        gharun -P ubuntu-latest=-self-hosted -W testworkflows/matrixtest.yml --parallel 0 && exit 1 || [[ "$?" = "1" ]]
        gharun -W testworkflows/artifact.yml
        gharun -W testworkflows/issue70/main.yml
        gharun -W testworkflows/issue70/main2.yml && exit 1 || [[ "$?" = "1" ]]
        gharun -W testworkflows/issue70/main3.yml && exit 1 || [[ "$?" = "1" ]]
        gharun -W testworkflows/issue70/main4.yml && exit 1 || [[ "$?" = "1" ]]