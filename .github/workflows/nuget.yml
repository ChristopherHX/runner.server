name: dotnet tool
on:
- push
- workflow_dispatch
jobs:
  package:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.build.outputs.version }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
    - name: GenerateConstant
      run: dotnet msbuild ./dir.proj -t:GenerateConstant /p:RunnerVersion=$(Get-Content ./runnerversion) /p:PackageRuntime=any
      shell: pwsh
      working-directory: ./src
    - name: Restore
      run: dotnet restore /p:RuntimeFrameworkVersion=5.0.0
      shell: pwsh
      working-directory: ./src/Runner.Client
    - name: Build
      id: build
      run: |
        $d = Get-Date
        $runnerversion = $($(Get-Content ../runnerversion) + "-preview." + $d.Year + "." + $d.Month + "." + $d.Day + "." + $d.Hour + "." + $d.Minute + "." + $d.Second + "." + $ENV:GITHUB_RUN_ID)
        dotnet build --no-restore -c Release /p:BUILD_OS=Any /p:Version=$runnerversion /p:RuntimeFrameworkVersion=5.0.0
        echo $('::set-output name=version::' + $runnerversion)
      shell: pwsh
      working-directory: ./src/Runner.Client
    - name: Pack
      run: |
        dotnet pack --no-restore -c Release --no-build /p:Version=${{steps.build.outputs.version}} /p:RuntimeFrameworkVersion=5.0.0
      shell: pwsh
      working-directory: ./src/Runner.Client
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: nupkg
        path: src/Runner.Client/nupkg
    - name: Push to Nuget
      if: false && env.GHARUN != ''
      run: dotnet nuget push ./*.nupkg --api-key $($ENV:GHARUN) --source https://api.nuget.org/v3/index.json
      shell: pwsh
      working-directory: ./src/Runner.Client/nupkg
      env:
        GHARUN: ${{secrets.GHARUN}}
  test:
    defaults:
      run:
        # It seems pwsh doesn't failfast, windows jobs succeeded with errors
        shell: bash
    needs:
    - package
    strategy:
      fail-fast: false
      matrix:
        os:
        - windows-2022
        - ubuntu-latest
        - macos-latest
        dotnet-version:
        - '5.0.x'
        - '5.0.200'
        - '6.0.x'
        include:
        - os: windows-2022
          tag: ltsc2022
    runs-on: ${{matrix.os}}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{matrix.dotnet-version}}
    - run: mkdir src/Runner.Client/nupkg
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: nupkg
        path: src/Runner.Client/nupkg
    - name: Install
      run: |
        dotnet tool install -g io.github.christopherhx.gharun --add-source src/Runner.Client/nupkg --version ${{needs.package.outputs.version}}
    - name: Test
      run: |
        gharun -W testworkflows/testlocalcheckout.yml
        gharun -W testworkflows/cache.yml -P ubuntu-latest=-self-hosted
        gharun -W testworkflows/testhashfiles.yml
        gharun -W testworkflows/dumpcontexts.yml
        gharun -P ubuntu-latest=-self-hosted -W testworkflows/matrixtest.yml --parallel 1
        gharun -W testworkflows/artifact.yml
        gharun -W testworkflows/issue70/main.yml
        gharun -W testworkflows/called.yml -e testworkflows/called_workflow_dispatch_event.json --env "input_x=Hello World 2" workflow_dispatch
        gharun -W testworkflows/called.yml --env "input_x=Hello World" workflow_dispatch
        gharun -W testworkflows/multiline_secrets.yml --secret-file testworkflows/multiline_secrets.secrets
        gharun -W testworkflows/multiline_env.yml --env-file testworkflows/multiline_secrets.secrets
        gharun --workflow testworkflows/test_template_runs_on.yml --workflow testworkflows/called_template_runs_on.yml
        gharun --workflow testworkflows/test_template_runs_on2.yml --workflow testworkflows/called_template_runs_on.yml -P self-hosted,testsystem=-self-hosted
        gharun --workflow testworkflows/test_template_runs_on3.yml --workflow testworkflows/called_template_runs_on.yml -P testsystem2,self-hosted,testsystem=-self-hosted
        gharun -W testworkflows/skippedjob.yml
        gharun --workflow testworkflows/test_with_required_secret.yml --workflow testworkflows/called_with_required_secret.yml
        gharun -W testworkflows/job-continue-on-error.yml
        gharun -W testworkflows/continue-on-error-bug-3.6.0-4-test.yml
        cd testworkflows/node16_complex_reusable_workflows
        gharun
        cd ../..
        cd testworkflows/db-disposed-issue
        gharun -P ubuntu-latest=-self-hosted
        gharun -P ubuntu-latest=-self-hosted --parallel 8
        cd ../..
    - name: Windows Container Change Firewall Settings
      if: contains(matrix.os, 'windows')
      run: |
        New-NetFirewallRule -Name gharun -DisplayName gharun -Enabled True -Action Allow -Direction Inbound -Program ($env:USERPROFILE + '\.dotnet\tools\gharun.exe') -Protocol tcp
        Get-NetFirewallProfile | Set-NetFirewallProfile -Enabled False
      shell: pwsh
    - name: Test Windows Container
      if: contains(matrix.os, 'windows')
      run: |
        gharun -W testworkflows/windows.yml -P windows-latest=mcr.microsoft.com/windows/servercore:${{matrix.tag}}
        gharun -W testworkflows/testlocalcheckout.yml -P self-hosted=mcr.microsoft.com/windows/servercore:${{matrix.tag}}
        # depends on bash, therefore disabled for now
        # gharun -W testworkflows/artifact.yml -P self-hosted=mcr.microsoft.com/windows/servercore:${{matrix.tag}}
        gharun -W testworkflows/cachewindowscontainer.yml -P windows-latest=mcr.microsoft.com/powershell:lts-windowsservercore-${{matrix.tag}}
    - name: Test Linux Container
      if: contains(matrix.os, 'ubuntu')
      run: |
        gharun -W testworkflows/testlocalcheckout.yml -P self-hosted=ubuntu:latest
        gharun -W testworkflows/artifact.yml -P self-hosted=ubuntu:latest
        gharun -W testworkflows/cache.yml -P ubuntu-latest=ubuntu:latest
      shell: bash
    - name: Test sqlite support
      if: contains(matrix.os, 'ubuntu')
      run: |
        mkdir gharun
        cd gharun
        unzip ../src/Runner.Client/nupkg/io.github.christopherhx.gharun.${{needs.package.outputs.version}}.nupkg
        chmod -R +rw tools/
        dotnet tools/net5.0/any/Runner.Server.dll --urls http://*:5000 "--ConnectionStrings:sqlite=Data Source=Agents.db;" &
        sleep 2
        echo "Check for creation of sqlite db"
        stat Agents.db
        echo "Configure Runner"
        dotnet tools/net5.0/any/Runner.Listener.dll configure --url http://localhost:5000 --token nothing
        echo "Start Runner"
        dotnet tools/net5.0/any/Runner.Listener.dll run&
        sleep 2
        echo "Send job"
        cd ..
        gharun --server http://localhost:5000 -W testworkflows/testlocalcheckout.yml
        gharun --server http://localhost:5000 -W testworkflows/cache.yml -P ubuntu-latest=-self-hosted
        gharun --server http://localhost:5000 -W testworkflows/testhashfiles.yml
        gharun --server http://localhost:5000 -W testworkflows/dumpcontexts.yml
        gharun --server http://localhost:5000 -P ubuntu-latest=-self-hosted -W testworkflows/matrixtest.yml --parallel 1
        gharun --server http://localhost:5000 -W testworkflows/artifact.yml
      shell: bash
